// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedSky.Api.Data;

#nullable disable

namespace RedSky.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250924065543_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("RedSky.Api.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmiratesId")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmrNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("InsuranceCompany")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("InsuranceGroup")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("InsurancePlan")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("InsuranceType")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("MemberId")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nationality")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmrNo")
                        .IsUnique();

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("RedSky.Api.Models.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BillNo")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimUniqueId")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Doctor")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("EncType")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("VatAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("VisitDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("VisitNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("VisitNo");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("RedSky.Api.Models.Visit", b =>
                {
                    b.HasOne("RedSky.Api.Models.Patient", "Patient")
                        .WithMany("Visits")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("RedSky.Api.Models.Patient", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
